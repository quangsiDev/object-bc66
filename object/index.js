// object ~ ƒë·ªëi t∆∞·ª£ng

// t·∫°o 1 object ƒë·ªÉ l∆∞ th√¥ng tin c·ªßa ng∆∞·ªùi d√πng

/*
     var name ={
        key:value,
     }
 */
var user1 = {
  name: "Alice",
  gmail: "alice@gmail.com",
};
var user2 = {
  name: "Bob",
  gmail: "bob@gmail.com",
};
/**
 Compare array v√† object

 Array: l∆∞u  c√°c data c√πng 1 nh√≥m  ~ d√πng d·∫•u [ ] ~ truy xu·∫•t t·ªõi ph·∫ßn t·ª≠ b√™n trong d·ª±a v√†o index   ( list - [] - index )

 Object: l∆∞u c√°c th√¥ng tin kh√°c nhau c√πng tr·ªè t·ªõi 1 ƒë·ªëi t∆∞·ª£ng ~ d·∫•u { } ~ truy xu·∫•t value th√¥ng qua key ( object - {} -  key  )
*/

// t·∫°o object ch·ª©a th√¥ng tin 1 con m√®o

var cat = {
  name: "miu", // property
  color: "white", // property
  speak: function () {
    // method
    console.log("meo meo");
  },
  child: {
    name: "kity",
    color: "white",
    speak: function () {
      console.log("kity meo meo");
    },
  },
};

// in ra t√™n c·ªßa con m√®o
//  object.key

console.log(cat.name);
console.log(cat.speak());

cat.child.speak();

// con tr·ªè this ( s·ª≠ d·ª•ng b√™n trong object)

var dog = {
  name: "lulu",
  color: "black",
  speak: function () {
    console.log("g√¢u g√¢u, my name : ", this.name);
  },
  introduce: function () {
    console.log("Hi everyone");
    this.speak();
  },
};

dog.speak();

dog.introduce();

// update value c·ªßa key

dog.color = "supper black";
console.log("üòÄ - dog", dog);
